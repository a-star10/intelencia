#!/usr/bin/env python3
"""
Script de migration pour cr√©er/mettre √† jour la table regles_avancement
Ex√©cuter une seule fois : python migrate_rules_table.py
"""
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from core.database import db_manager

def migrate_rules_table():
    """Cr√©er ou mettre √† jour la table regles_avancement"""
    print("üîÑ D√©but de la migration de la table regles_avancement...")
    
    try:
        with db_manager.get_connection() as conn:
            # V√©rifier si la table existe
            cursor = conn.execute("""
                SELECT name FROM sqlite_master 
                WHERE type='table' AND name='regles_avancement'
            """)
            table_exists = cursor.fetchone() is not None
            
            if table_exists:
                print("‚ö†Ô∏è  La table regles_avancement existe d√©j√†")
                response = input("Voulez-vous la recr√©er ? (y/N): ")
                if response.lower() != 'y':
                    print("‚ùå Migration annul√©e")
                    return
                
                # Supprimer l'ancienne table
                conn.execute("DROP TABLE regles_avancement")
                print("üóëÔ∏è  Ancienne table supprim√©e")
            
            # Cr√©er la nouvelle table
            conn.execute("""
                CREATE TABLE regles_avancement (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    categorie TEXT NOT NULL,
                    grade_source TEXT NOT NULL,
                    grade_cible TEXT NOT NULL,
                    type_avancement TEXT DEFAULT 'Normal',
                    
                    anciennete_service_min INTEGER DEFAULT 0,
                    anciennete_grade_min INTEGER DEFAULT 0,
                    grade_specifique TEXT,
                    anciennete_grade_specifique INTEGER DEFAULT 0,
                    
                    diplomes_requis TEXT,
                    note_min_courante TEXT,
                    notes_interdites_n1_n2 TEXT,
                    
                    conditions_speciales TEXT,
                    
                    statut TEXT DEFAULT 'Actif',
                    actif BOOLEAN DEFAULT 1,
                    
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            """)
            
            conn.commit()
            print("‚úÖ Table regles_avancement cr√©√©e avec succ√®s !")
            print("\nüìã Structure de la table :")
            print("   - Cat√©gorie, grades source/cible, type avancement")
            print("   - Conditions d'anciennet√© (service, grade, grade sp√©cifique)")
            print("   - Dipl√¥mes requis, notes minimales, notes interdites")
            print("   - Conditions sp√©ciales, statut, actif")
            
    except Exception as e:
        print(f"‚ùå Erreur lors de la migration: {e}")
        return
    
    print("\n‚úÖ Migration termin√©e avec succ√®s !")
    print("Vous pouvez maintenant cr√©er des r√®gles depuis l'interface.")

if __name__ == "__main__":
    migrate_rules_table()